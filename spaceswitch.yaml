esphome:
  name: spaceswitch
  friendly_name: spaceswitch
  platform: ESP8266
  board: d1_mini

  on_boot:
    priority: -100
    then:
      - logger.log:
          format: "Switch state: %f"
          args: ['id(space_switch).state']

      # For some reason, this isn't working - can't read the switch state on startup?
      - light.turn_on:
          id: status_light
          brightness: 0.5
          red: !lambda "if (id(space_switch).state) return 0; else return 1.0;"
          green: !lambda "if (id(space_switch).state) return 1.0; else return 0;"



# Enable logging
logger:


# Enable Home Assistant API
api:
  encryption:
    key: !secret hass_encryption_key

ota:
  platform: esphome


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "SpaceSwitch-B3Ed25"
    password: !secret fallback_wifi_password

captive_portal:

web_server:
  port: 80
  include_internal: true

# Used to support POST request to send data to MemberMatters SpaceDirectory API
# https://esphome.io/components/http_request.html
# https://github.com/membermatters/MemberMatters/blob/main/docs/SPACEDIRECTORY.md
http_request:
  verify_ssl: false

binary_sensor:
  - name: "Space Switch"
    id: space_switch
    platform: gpio
    pin:
      number: GPIO2
      inverted: True
      mode:
        input: True
        pullup: True
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms

    on_press:
      then:
        - http_request.post:
            url: "https://members.pawprintprototyping.org/api/spacedirectory/update"
            headers:
              Content-Type: application/json
              Authorization: !secret membermatters_api_key
            json: |-
              root["is_open"] = true;
            on_response:
              then:
                - logger.log:
                    format: "Response status: %d, Duration: %u ms"
                    args:
                      - response->status_code
                      - response->duration_ms
                - light.turn_on:
                    id: status_light
                    transition_length: 0.5s
                    red: 0
                    green: 0.5
                    blue: 0
            

    on_release:
      then:
        - http_request.post:
            url: "https://members.pawprintprototyping.org/api/spacedirectory/update"
            headers:
              Content-Type: application/json
              Authorization: !secret membermatters_api_key
            json: |-
              root["is_open"] = false;
            on_response:
              then:
                - logger.log:
                    format: "Response status: %d, Duration: %u ms"
                    args:
                      - response->status_code
                      - response->duration_ms
                - light.turn_on:
                    id: status_light
                    transition_length: 0.5s
                    red: 0.5
                    green: 0
                    blue: 0



light:
  - name: "NeoPixel Light"
    id: status_light
    platform: neopixelbus
    type: GRB
    variant: WS2811
    num_leds: 29
    pin: GPIO3  # RX pin
    method:
      type: esp8266_dma

    
